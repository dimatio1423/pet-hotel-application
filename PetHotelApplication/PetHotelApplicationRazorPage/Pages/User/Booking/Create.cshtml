@page
@model PetHotelApplicationRazorPage.Pages.User.Booking.CreateModel
@{
    <style>
        .image-container {
            position: relative;
            width: 100%;
            height: 100%;
        }

            .image-container img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

        .services-container {
            display: flex;
            flex-wrap: wrap;
        }

        .service-column {
            flex: 1;
            min-width: 50%;
            box-sizing: border-box;
            padding: 10px;
        }
    </style>
}

<div class="container-fluid mt-5">
    <div class="container">
        <div class="row d-flex align-items-stretch">
            <!-- Image Column -->
            <div class="col-md-6 d-flex align-items-stretch">
                <div class="image-container">
                    <img src="~/img/about.jpg" alt="Pet Image" class="img-fluid w-100" />
                </div>
            </div>
            <!-- Form Column -->
            <div class="col-md-6 d-flex align-items-stretch">
                <form method="post" class="w-100">
                    <h2>BOOKING FORM</h2>

                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="form-group mt-2">
                        <label asp-for="Booking.BoardingType">Boarding Type:</label>
                        <select asp-for="Booking.BoardingType" class="form-control" asp-items="ViewBag.BoardingTypes"></select>
                        <span asp-validation-for="Booking.BoardingType" class="text-danger"></span>
                    </div>

                    <div class="form-group mt-2">
                        <label asp-for="Booking.StartDate">Start Date:</label>
                        <input asp-for="Booking.StartDate" class="form-control" type="date" />
                        <span asp-validation-for="Booking.StartDate" class="text-danger"></span>
                    </div>

                    <div class="form-group mt-2">
                        <label asp-for="Booking.EndDate">End Date:</label>
                        <input asp-for="Booking.EndDate" class="form-control" type="date" />
                        <span asp-validation-for="Booking.EndDate" class="text-danger"></span>
                    </div>

                    @if (TempData["ErrorDate"] != null)
                    {
                        <div class="alert alert-danger">
                            <span>@TempData["ErrorDate"] </span>
                        </div>
                    }

                    <div class="form-group mt-2">
                        <label asp-for="Booking.Note">Note:</label>
                        <textarea asp-for="Booking.Note" class="form-control"></textarea>
                        <span asp-validation-for="Booking.Note" class="text-danger"></span>
                    </div>

                    <div class="form-group mt-2">
                        <label asp-for="Booking.AccommodationId">Accommodation:</label>
                        <select asp-for="Booking.AccommodationId" class="form-control" asp-items="ViewBag.Accommodations"></select>
                        <span asp-validation-for="Booking.AccommodationId" class="text-danger"></span>
                    </div>

                    @if (Model.Pets.Count > 0)
                    {
                        <div class="form-group mt-2">
                            <label asp-for="Booking.PetId">Pet:</label>
                            <select asp-for="Booking.PetId" class="form-control" asp-items="ViewBag.Pets"></select>
                            <span asp-validation-for="Booking.PetId" class="text-danger"></span>
                        </div>
                    }
                    else
                    {
                        <div class="form-group mt-2">
                            <label>Pet:</label>
                            <a asp-page="/User/Pets/Create" class="btn btn-primary m-2">Add Pet</a>
                        </div>
                    }

                    @if (TempData["ErrorPet"] != null)
                    {
                        <div class="alert alert-danger">
                            <span>@TempData["ErrorPet"] </span>
                        </div>
                    }

                    <div class="form-group">
                        <label>Services:</label>
                        <div class="services-container">
                            @for (int i = 0; i < Model.PetCareServices.Count; i++)
                            {
                                <div class="service-column">
                                    <div class="form-check">
                                        @{
                                            bool isChecked = Model.BookingServices.Contains(Model.PetCareServices[i].Id);
                                        }
                                        <input class="form-check-input" type="checkbox" value="@Model.PetCareServices[i].Id" name="BookingServices" @(isChecked ? "checked" : "") />
                                        <label class="form-check-label">@Model.PetCareServices[i].Type - @Model.PetCareServices[i].Price.ToString("#,##0") VNĐ</label>
                                    </div>
                                </div>
                            }
                        </div>
                        <span asp-validation-for="BookingServices" class="text-danger"></span>

                        @if (TempData["ErrorAccommodation"] != null)
                        {
                            <div class="alert alert-danger">
                                <span>@TempData["ErrorAccommodation"] </span>
                            </div>
                        }

                        @if (TempData["ErrorServices"] != null)
                        {
                            <div class="alert alert-danger">
                                <span>@TempData["ErrorServices"] </span>
                            </div>
                        }

                        @if (TempData["ErrorPetBooking"] != null)
                        {
                            <div class="alert alert-danger">
                                <span>@TempData["ErrorPetBooking"] </span>
                            </div>
                        }

                    </div>

                    <button type="submit" class="btn btn-primary">BOOK NOW</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const startDateInput = document.querySelector('input[name="Booking.StartDate"]');
            const endDateInput = document.querySelector('input[name="Booking.EndDate"]');
            const accommodationSelect = document.querySelector('select[name="Booking.AccommodationId"]');

            function updateAccommodations() {
                const startDate = startDateInput.value;
                const endDate = endDateInput.value;

                if ((startDate && endDate) || startDate) {
                    fetch(`./Create?handler=ValidAccommodations&start=${startDate}&end=${endDate}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(`Network response was not ok: ${response.statusText}`);
                            }
                            return response.json();
                        })
                        .then(data => {
                            accommodationSelect.innerHTML = '';
                            if (data.error) {
                                console.error(data.error);
                            } else {
                                data.forEach(accommodation => {
                                    const option = document.createElement('option');
                                    option.value = accommodation.accommodationId;
                                    option.textContent = `${accommodation.name} (${accommodation.type}) - ${accommodation.price} VNĐ`;
                                    accommodationSelect.appendChild(option);
                                });
                            }
                        })
                        .catch(error => console.error('Error fetching accommodations:', error));
                }
            }

            startDateInput.addEventListener('change', updateAccommodations);
            endDateInput.addEventListener('change', updateAccommodations);
        });
    </script>
}
